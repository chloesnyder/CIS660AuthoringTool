

/* Cube instance
global proc createNode() {
	polyCube;
	instancer;
	createNode transform -n CIS660AuthoringTool1;
	createNode mesh -n CIS660AuthoringToolShape1 -p CIS660AuthoringTool1;
	sets -add initialShadingGroup CIS660AuthoringToolShape1;
	createNode CIS660AuthoringToolNode -n CIS660AuthoringToolNode1;
	connectAttr time1.outTime CIS660AuthoringToolNode1.time;
	connectAttr CIS660AuthoringToolNode1.outputMesh CIS660AuthoringToolShape1.inMesh;
	connectAttr pCube1.matrix instancer1.inputHierarchy[0];
	connectAttr CIS660AuthoringToolNode1.outPoints instancer1.inputPoints;
}*/

global proc createNode() {
	string $obj[] = `ls -sl`;
	$item = $obj[0];
	int $count[] = `polyEvaluate -v $item`;
	select ($item + ".vtx [0:" + ($count[0] - 1) + "]");
	polyColorPerVertex -rgb 0.0 (48.0/256.0) (9.0/256.0);

	instancer;
	createNode transform -n CIS660AuthoringTool1;
	createNode mesh -n CIS660AuthoringToolShape1 -p CIS660AuthoringTool1;
	sets -add initialShadingGroup CIS660AuthoringToolShape1;
	createNode CIS660AuthoringToolNode -n CIS660AuthoringToolNode1;
	connectAttr time1.outTime CIS660AuthoringToolNode1.time;
	connectAttr CIS660AuthoringToolNode1.outputMesh CIS660AuthoringToolShape1.inMesh;
	connectAttr ($item+".matrix") instancer1.inputHierarchy[0];
	connectAttr CIS660AuthoringToolNode1.outPoints instancer1.inputPoints;

	//display everything with colors
	string $myBlinn = `shadingNode -asShader blinn`;
	setAttr ($myBlinn+".specularColor") -type double3 .05 .05 .05;
	select CIS660AuthoringToolShape1;
	hyperShade -assign $myBlinn;
	polyOptions -cs true -mb "multiply" CIS660AuthoringToolShape1;
	
	select $item;
	hyperShade -assign $myBlinn;
	polyOptions -cs true -mb "multiply" $item ;
}


menu -parent MayaWindow -label "CIS660AuthoringTool Command" -tearOff true menu1;
	menuItem -label "Create node" -command "createNode();";
